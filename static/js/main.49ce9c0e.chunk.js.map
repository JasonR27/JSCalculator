{"version":3,"sources":["App.js","index.js"],"names":["JSCalc","React","useState","result","setResult","id","ch","map","cb","className","setresult","nresult","ButtonClick","props","BuClick","handleOperation","Array","isArray","length","calcArray","i","AritExpFormula","bExpForm","array","array2","includes","indexOf","slice","concat","multiply","divide","sum","subtract","bExpFormAdSu","x","y","parseFloat","onClick","String","nume","JSCalcAppWrapper","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.49ce9c0e.chunk.js","sourcesContent":["import React from 'react'\r\n//import { sum, divide, subtract, multiply } from 'mathjs'\r\n//import styles from '../pagesstyles/JavascriptCalculator.css'\r\n//import Helmet from 'react-helmet'\r\nimport './App.css'\r\nimport { sum, multiply, divide, subtract } from 'mathjs'\r\n\r\nexport function JSCalc() {\r\n\r\n    const [result, setResult] = React.useState([0]);\r\n\r\n    const buttons = [\r\n        { ch: \"AC\", id: \"clear\" },\r\n        { ch: \"+\", id: \"add\" },\r\n        { ch: \"-\", id: \"subtract\" },\r\n        { ch: \"*\", id: \"multiply\" },\r\n        { ch: 1, id: \"one\" },\r\n        { ch: 2, id: \"two\" },\r\n        { ch: 3, id: \"three\" },\r\n        { ch: \"/\", id: \"divide\" },\r\n        { ch: 4, id: \"four\" },\r\n        { ch: 5, id: \"five\" },\r\n        { ch: 6, id: \"six\" },\r\n        { ch: \"=\", id: \"equals\" },\r\n        { ch: 7, id: \"seven\" },\r\n        { ch: 8, id: \"eight\" },\r\n        { ch: 9, id: \"nine\" },\r\n        { ch: \".\", id: \"decimal\" },\r\n        { ch: 0, id: \"zero\" }\r\n    ];\r\n\r\n    return (\r\n        <div id=\"container0\">            \r\n            <div id=\"pageData\">JavaScript Calculator</div>\r\n            <div id=\"calculatorContainer\">\r\n                <div id=\"display\">{result}</div>\r\n                <div id=\"calcbuttons\">\r\n                    {buttons.map((cb) => (\r\n                        <ButtonClick\r\n                            className=\"m-3 p-5\"\r\n                            id={cb.id}\r\n                            ch={cb.ch}\r\n                            result={result}\r\n                            setresult={(nresult) => setResult(nresult)}\r\n                            key={cb.ch + \" key\"}\r\n                        >\r\n                            {cb.ch}\r\n                        </ButtonClick>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <p id=\"designedBy\">Designed by JasonR27</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ButtonClick = (props) => {\r\n    return (\r\n        <BuClick\r\n            ch={props.ch}\r\n            id={props.id}\r\n            result={props.result}\r\n            setresult={(nresult) => props.setresult(nresult)}\r\n        />\r\n    );\r\n};\r\n\r\nconst BuClick = (props) => {\r\n\r\n  const handleBuClick = () => {\r\n      \r\n    if (props.result === [0]) {\r\n        props.setresult([props.ch]);\r\n    } else {\r\n        if (typeof props.ch === \"number\" || props.ch === \".\") {\r\n            if (typeof props.ch === \"number\") {\r\n                \r\n\r\n                // adding ability to deal with negative numbers operations\r\n\r\n                if (props.result[props.result.length - 1] === \"-\" &&\r\n                    typeof props.result[props.result.length - 2] === \"string\") {\r\n                    props.result[props.result.length - 1] =\r\n                        parseFloat(String(props.result[props.result.length - 1]).concat(\r\n                            String(props.ch)));\r\n                    props.setresult([...props.result]);\r\n                } else {\r\n                \r\n\r\n                    if (\r\n                        typeof props.result[props.result.length - 1] === \"number\" ||\r\n                        (typeof props.result[props.result.length - 1] === \"string\" &&\r\n                            props.result[props.result.length - 1][\r\n                            props.result[props.result.length - 1].length - 1\r\n                            ] === \".\")\r\n                    ) {\r\n                        if (typeof props.result[props.result.length - 1] === \"number\") {\r\n\r\n                            props.result[props.result.length - 1] =\r\n                                parseFloat(String(props.result[props.result.length - 1]).concat(String(props.ch)));\r\n                            props.setresult([...props.result]);\r\n                        } else {\r\n                            if (typeof props.ch === \"number\") {\r\n                                props.result[props.result.length - 1] =\r\n                                    String(props.result[props.result.length - 1]).concat(\r\n                                        String(props.ch)\r\n                                    );\r\n                                props.setresult([...props.result]);\r\n                            } else {\r\n                                props.result[props.result.length - 1] = parseFloat(\r\n                                    String(props.result[props.result.length - 1]).concat(\r\n                                        String(props.ch)\r\n                                    )\r\n                                );\r\n                                props.setresult([...props.result]);\r\n                            }\r\n                        }\r\n                    } else {\r\n                        props.setresult([...props.result, props.ch]);\r\n                    }\r\n                }\r\n            } else {\r\n            \r\n                if (typeof props.result[props.result.length - 1] === \"string\") {                \r\n                    if (props.result[props.result.length - 1].includes(\".\")) {\r\n                        props.result[props.result.length - 1] = props.result[props.result.length - 1];\r\n                        props.setresult([...props.result]);\r\n                    } else {\r\n                        if (\r\n                            props.result[props.result.length - 1][\r\n                            props.result[props.result.length - 1].length - 1\r\n                            ] === \".\"\r\n                        ) {\r\n                            props.setresult([...props.result]);\r\n                        } else {\r\n                            props.result[props.result.length - 1] = String(\r\n                                props.result[props.result.length - 1]\r\n                            );\r\n                            props.result[props.result.length - 1] = props.result[\r\n                                props.result.length - 1\r\n                            ].concat(props.ch);\r\n                            props.setresult([...props.result]);\r\n                        }\r\n                    }\r\n                } else {\r\n                    props.result[props.result.length - 1] =\r\n                        String(props.result[props.result.length - 1]).concat(\r\n                            String(props.ch));\r\n                    props.setresult([...props.result]);\r\n                }\r\n            }\r\n        } else {\r\n            if (props.ch === \"+\" || props.ch === \"/\" || props.ch === \"*\") {\r\n                \r\n                if (props.result[props.result.length - 1] === \"+\" ||\r\n                    props.result[props.result.length - 1] === \"/\" ||\r\n                    props.result[props.result.length - 1] === \"*\" ||\r\n                    props.result[props.result.length - 1] === \"-\") {\r\n                \r\n                    if (props.result[props.result.length - 1] === \"-\") {                               \r\n\r\n                        if (props.result[props.result.length - 2] === \"+\" ||\r\n                            props.result[props.result.length - 2] === \"*\" ||\r\n                            props.result[props.result.length - 2] === \"/\") {                    \r\n                            let i = props.result.length - 2;                                \r\n                            props.setresult([ ...props.result.slice(0, i).concat(props.ch)]);\r\n                        } else {\r\n                            props.result[props.result.length - 1] = props.ch;\r\n                            props.setresult([...props.result]);\r\n                        }\r\n                    } else {\r\n\r\n                        props.result[props.result.length - 1] = props.ch;\r\n                        props.setresult([...props.result]);\r\n                    }\r\n                } else {\r\n                    if (props.ch === \"AC\" || \"=\") {\r\n                        handleOperation();\r\n                    } else {\r\n                        props.setresult([...props.result, props.ch]);\r\n                    }\r\n                }\r\n            } else {                    \r\n                if (props.ch === \"-\") {                    \r\n                    if (props.result[props.result.length - 1] === \"-\") {                \r\n                        if (props.result[props.result.length - 2] === \"-\") {\r\n                            props.result[props.result.length - 1] = \"-\";\r\n                            props.setresult([...props.result]);\r\n                        } else {props.setresult([...props.result, props.ch]);}        \r\n                    } else { props.setresult([...props.result, props.ch]); }\r\n                } else {\r\n                    handleOperation();\r\n                }\r\n            }                \r\n        }\r\n    }\r\n};\r\n\r\nconst handleOperation = () => {\r\n\r\n    if (props.ch === \"AC\") {\r\n        props.setresult([0]);\r\n    } else {\r\n        if (props.ch === \"=\") {\r\n\r\n            if (!(Array.isArray(props.result[0]) || props.result.length > 1)) {\r\n                props.setresult([...props.result]);\r\n            } else {\r\n\r\n                let calcArray = props.result;\r\n\r\n                for (\r\n                    let i = 0;\r\n                    i < 10 && (Array.isArray(calcArray[0]) || calcArray.length > 1);\r\n                    i++\r\n                ) {\r\n\r\n                    props.setresult(AritExpFormula(calcArray));\r\n\r\n                    if (Array.isArray(calcArray[0]) || calcArray.length === 1) {\r\n                        if (!Array.isArray(calcArray[0])) {\r\n                            props.setresult(calcArray);\r\n                            break;\r\n                        } else {\r\n                            if (calcArray[0].length === 1) {\r\n                                props.setresult(calcArray);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    calcArray = AritExpFormula(calcArray);\r\n\r\n                    props.setresult(calcArray);\r\n                }\r\n                props.setresult(calcArray);\r\n            }\r\n        } else {\r\n            props.setresult([...props.result, props.ch]);\r\n        }\r\n    }\r\n};\r\n\r\nconst bExpForm = (array) => {\r\n\r\n    let array2;\r\n\r\n    if (array.includes(\"*\") || array[0].includes(\"*\")) {\r\n        let i;\r\n        if (array.includes(\"*\")) {\r\n            i = array.indexOf(\"*\");\r\n            array2 = [\r\n                array\r\n                    .slice(0, i - 1)\r\n                    .concat(multiply(array[i - 1], array[i + 1]))\r\n                    .concat(array.slice(i + 2, array.length))\r\n            ];\r\n        } else {\r\n            i = array[0].indexOf(\"*\");\r\n            array2 = [\r\n                array[0]\r\n                    .slice(0, i - 1)\r\n                    .concat(multiply(array[0][i - 1], array[0][i + 1]))\r\n                    .concat(array[0].slice(i + 2, array[0].length))\r\n            ];\r\n        }\r\n        return array2;\r\n    } else {\r\n        if (array.includes(\"/\") || array[0].includes(\"/\")) {\r\n\r\n            let i;\r\n\r\n            if (array.includes(\"/\")) {\r\n                i = array.indexOf(\"/\");\r\n                array2 = [\r\n                    array\r\n                        .slice(0, i - 1)\r\n                        .concat(divide(array[i - 1], array[i + 1]))\r\n                        .concat(array.slice(i + 2, array.length))\r\n                ];\r\n            } else {\r\n                i = array[0].indexOf(\"/\");\r\n                array2 = [\r\n                    array[0]\r\n                        .slice(0, i - 1)\r\n                        .concat(divide(array[0][i - 1], array[0][i + 1]))\r\n                        .concat(array[0].slice(i + 2, array[0].length))\r\n                ];\r\n            }\r\n\r\n            return array2;\r\n        }\r\n    }\r\n};\r\n\r\nconst bExpFormAdSu = (array) => {\r\n\r\n    if (array.length === 3 || Array.isArray(array[0])) {\r\n\r\n        if (Array.isArray(array[0])) {\r\n\r\n            if (array[0].length === 3) {\r\n\r\n                if (array[0][1] === \"-\") {\r\n\r\n                    return [subtract(array[0][0], array[0][2])];\r\n\r\n                } else {\r\n                    return [sum(array[0][0], array[0][2])];\r\n                }\r\n\r\n            }\r\n        } else {\r\n\r\n            if (array[1] === \"-\") {\r\n                return [subtract(array[0], array[2])];\r\n            } else {\r\n                return [sum(array[0], array[2])];\r\n            }\r\n        }\r\n    }\r\n\r\n    let array2;\r\n\r\n    if (Array.isArray(array[0])) {\r\n\r\n        if (array[0].includes(\"+\") && array[0].includes(\"-\")) {\r\n            \r\n            if (array[0].indexOf(\"+\") > array[0].indexOf(\"-\")) {\r\n                \r\n                let i = array[0].indexOf(\"-\");     \r\n\r\n                array2 = [\r\n                    array[0]\r\n                        .slice(0, i - 1)\r\n                        .concat(subtract(array[0][i - 1], array[0][i + 1]))\r\n                        .concat(array[0].slice(i + 2, array[0].length))\r\n                ];                   \r\n\r\n                return array2;\r\n\r\n            } else {\r\n                let i = array[0].indexOf(\"+\");\r\n\r\n                array2 = [\r\n                    array[0]\r\n                        .slice(0, i - 1)\r\n                        .concat(sum(array[0][i - 1], array[0][i + 1]))\r\n                        .concat(array[0].slice(i + 2, array[0].length))\r\n                ];                    \r\n            }\r\n            return array2;\r\n        } else {\r\n\r\n            if (array[0].includes(\"+\")) {\r\n\r\n                let i = array[0].indexOf(\"+\");\r\n\r\n                array2 = [\r\n                    array[0]\r\n                        .slice(0, i - 1)\r\n                        .concat(sum(array[0][i - 1], array[0][i + 1]))\r\n                        .concat(array[0].slice(i + 2, array[0].length))\r\n                ];\r\n\r\n                return array2;\r\n\r\n            } else {\r\n\r\n                let i = array[0].indexOf(\"-\");\r\n\r\n                array2 = [\r\n                    array[0]\r\n                        .slice(0, i - 1)\r\n                        .concat(subtract(array[0][i - 1], array[0][i + 1]))\r\n                        .concat(array[0].slice(i + 2, array[0].length))\r\n                ];\r\n\r\n                return array2;\r\n            }\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        if (array.includes(\"+\") && array.includes(\"-\")) {\r\n\r\n            if (array.indexOf(\"+\") > array.indexOf(\"-\")) {\r\n                \r\n                let i = array.indexOf(\"-\");\r\n                array2 = [\r\n                    array\r\n                        .slice(0, i - 1)\r\n                        .concat(subtract(array[i - 1], array[i + 1]))\r\n                        .concat(array.slice(i + 2, array.length))\r\n                ];\r\n                \r\n                return array2;\r\n            } else {\r\n                let i = array.indexOf(\"+\");                    \r\n                array2 = [\r\n                    array\r\n                        .slice(0, i - 1)\r\n                        .concat(sum(array[i - 1], array[i + 1]))\r\n                        .concat(array.slice(i + 2, array.length))\r\n                ];                    \r\n            }\r\n            return array2;\r\n        } else {\r\n            // one operator type only calculation for array\r\n\r\n            if (array.includes(\"+\")) {\r\n\r\n                let i = array.indexOf(\"+\");\r\n\r\n                array2 = [\r\n                    array\r\n                        .slice(0, i - 1)\r\n                        .concat(sum(array[i - 1], array[i + 1]))\r\n                        .concat(array.slice(i + 2, array.length))\r\n                ];\r\n\r\n                return array2;\r\n\r\n            } else {\r\n\r\n                let i = array.indexOf(\"-\");\r\n\r\n                array2 = [\r\n                    array\r\n                        .slice(0, i - 1)\r\n                        .concat(subtract(array[i - 1], array[i + 1]))\r\n                        .concat(array.slice(i + 2, array.length))\r\n                ];\r\n\r\n                return array2;\r\n            }\r\n        }\r\n    }\r\n    return array2;\r\n};\r\n\r\nconst AritExpFormula = (array) => {\r\n  \r\n    if (array.length > 2 || Array.isArray(array[0])) {\r\n\r\n        if (array.length > 3 || Array.isArray(array[0])) {\r\n\r\n            if (Array.isArray(array[0])) {\r\n                if (array[0].includes(\"*\") || array[0].includes(\"/\")) {\r\n                    return bExpForm(array);\r\n                }\r\n            }\r\n\r\n            if (array.includes(\"*\") || array.includes(\"/\")) {\r\n                \r\n                return bExpForm(array);\r\n\r\n            } else {\r\n                // calculate here all additions and subtractions left after all mult and div have been done\r\n                \r\n                return bExpFormAdSu(array);\r\n            }\r\n        } else {\r\n            if (array.length === 3) {\r\n                \r\n                if (array[1] === \"+\") {\r\n                \r\n                    const op = (x, y) => {\r\n                        return parseFloat(parseFloat(x) + parseFloat(y));\r\n                    };\r\n                \r\n                    return [op(array[0], array[2])];\r\n                } else {\r\n                    if (array[1] === \"-\") {\r\n                \r\n                        return [subtract(array[0], array[2])];\r\n                    } else {\r\n                        if (array[1] === \"*\") {\r\n                \r\n                            return [multiply(array[0], array[2])];\r\n                        } else {\r\n                            if (array[1] === \"/\") {\r\n                \r\n                                return [divide(array[0], array[2])];\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        if (array.length === 2) {\r\n            return [sum(array[0], array[1])];\r\n        } else {\r\n            return props.result[0];\r\n        }\r\n    }\r\n};\r\n\r\n    return (\r\n        <button\r\n            onClick={handleBuClick}\r\n            className=\"btn-dft\"\r\n            ch={props.ch}\r\n            id={props.id}\r\n            nume={props.nume}\r\n            result={props.result}\r\n            setresult={(nresult) => props.setResult(nresult)}\r\n        >\r\n            {props.ch}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport class JSCalcAppWrapper extends React.Component {\r\n    render() {\r\n      return (\r\n<section id=\"JSCalc\" >\r\n          <JSCalc  />\r\n        </section>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default JSCalcAppWrapper;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport JSCalcAppWrapper from \"./App\"\r\n\r\nReactDOM.render(<JSCalcAppWrapper />, document.getElementById(\"App\"));\r\n\r\n"],"sourceRoot":""}